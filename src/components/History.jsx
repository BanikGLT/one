import React from 'react';
import './History.css';

const History = ({ history, isVisible }) => {
  const formatAmount = (amount) => {
    return new Intl.NumberFormat('ru-RU', {
      minimumFractionDigits: 2,
      maximumFractionDigits: 2
    }).format(amount);
  };

  const getTimeAgo = () => {
    const now = new Date();
    const minutes = now.getMinutes();
    const seconds = now.getSeconds();
    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
  };

  return (
    <div className={`history-container ${isVisible ? 'visible' : ''}`}>
      {/* –§–æ–Ω–æ–≤–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞ */}
      <div className="history-glow"></div>
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
      <div className="history-main">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="history-header">
          <div className="history-icon-wrapper">
            <div className="history-icon">
              <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M12 8V12L15 15" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                <circle cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="2"/>
                <path d="M12 6V12L16 14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
              </svg>
            </div>
          </div>
          <div className="history-title">
            <div className="title-main">–ò—Å—Ç–æ—Ä–∏—è –¥–∂–µ–∫–ø–æ—Ç–æ–≤</div>
            <div className="title-subtitle">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–∏</div>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—Ä–∏–∏ */}
        <div className="history-list">
          {history.length === 0 ? (
            <div className="history-empty">
              <div className="empty-icon">üé∞</div>
              <div className="empty-text">–ò—Å—Ç–æ—Ä–∏—è –¥–∂–µ–∫–ø–æ—Ç–æ–≤ –ø—É—Å—Ç–∞</div>
              <div className="empty-subtitle">–ë—É–¥—å –ø–µ—Ä–≤—ã–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º!</div>
            </div>
          ) : (
            history.map((item, index) => (
              <div key={index} className={`history-item ${item.jackpot ? 'jackpot-winner' : ''}`}>
                {/* –ò–∫–æ–Ω–∫–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è */}
                <div className="item-icon">
                  {item.jackpot ? (
                    <div className="winner-icon">
                      <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        <path d="M19 3L19.5 5.5L22 6L19.5 6.5L19 9L18.5 6.5L16 6L18.5 5.5L19 3Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        <path d="M5 3L5.5 5.5L8 6L5.5 6.5L5 9L4.5 6.5L2 6L4.5 5.5L5 3Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      </svg>
                    </div>
                  ) : (
                    <div className="regular-icon">
                      <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="2"/>
                        <path d="M12 6V12L16 14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      </svg>
                    </div>
                  )}
                </div>

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ */}
                <div className="item-info">
                  <div className="winner-name">{item.winner}</div>
                  <div className="winner-details">
                    <span className="amount">{formatAmount(item.amount)} TON</span>
                    {item.participants && (
                      <span className="participants">‚Ä¢ {item.participants} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span>
                    )}
                    {item.chance && (
                      <span className="chance">‚Ä¢ {item.chance}% —à–∞–Ω—Å</span>
                    )}
                  </div>
                </div>

                {/* –í—Ä–µ–º—è */}
                <div className="item-time">
                  <div className="time-text">{getTimeAgo()}</div>
                  <div className="time-indicator"></div>
                </div>

                {/* –≠—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è –¥–∂–µ–∫–ø–æ—Ç–∞ */}
                {item.jackpot && (
                  <div className="jackpot-effects">
                    <div className="effect-sparkle sparkle-1"></div>
                    <div className="effect-sparkle sparkle-2"></div>
                    <div className="effect-sparkle sparkle-3"></div>
                  </div>
                )}
              </div>
            ))
          )}
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        {history.length > 0 && (
          <div className="history-stats">
            <div className="stat-item">
              <div className="stat-label">–í—Å–µ–≥–æ –¥–∂–µ–∫–ø–æ—Ç–æ–≤</div>
              <div className="stat-value">{history.filter(item => item.jackpot).length}</div>
            </div>
            <div className="stat-item">
              <div className="stat-label">–û–±—â–∞—è —Å—É–º–º–∞</div>
              <div className="stat-value">
                {formatAmount(history.reduce((sum, item) => sum + item.amount, 0))} TON
              </div>
            </div>
          </div>
        )}
      </div>

      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã */}
      <div className="history-particles">
        {[...Array(6)].map((_, i) => (
          <div 
            key={i} 
            className="particle"
            style={{ animationDelay: `${i * 0.4}s` }}
          ></div>
        ))}
      </div>
    </div>
  );
};

export default History; 